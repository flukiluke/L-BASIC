'Copyright Luke Ceddia
'SPDX-License-Identifier: Apache-2.0
'dependency.bm - Dependency management and module generation

sub dep_emit_header
    out_file = freefile
    open_file options.outputfile, out_file, TRUE

    for i = 1 to ast_last_procedure
        root = ast_procedures(i)
        func = root->ref
        if func->func_flags AND SYM_FUNCTION_PUBLIC then
            print #out_file, dep_make_func_declaration$(root)
        end if
    next i

    close #out_file
end sub

function dep_make_func_declaration$(root)
    func = root->ref
    sig = root->ref2
    o$ = "DECLARE "
    if type_sig_return(sig) = TYPE_NONE then
        o$ = o$ + "SUB " + func->identifier
    else
        o$ = o$ + "FUNCTION " + func->identifier + " AS " + type_human_readable$(type_sig_return(sig))
    end if
    numargs = type_sig_numargs(sig)
    if numargs > 0 then
        o$ = o$ + "("
        for i = 1 to numargs
            flags = type_sig_argflags(sig, i)
            if flags and TYPE_BYVAL then o$ = o$ + "BYVAL "
            if flags and TYPE_BYREF then o$ = o$ + "BYREF "
            if flags and TYPE_OPTIONAL then o$ = o$ + "OPTION "
            var = ast_get_child(root, i + 1)
            var = var->ref
            o$ = o$ + ps_remove_scope$(var->identifier) + " AS "
            o$ = o$ + type_human_readable$(type_sig_argtype(sig, i))
            if i < numargs then
                o$ = o$ + ", "
            end if
        next i
        o$ = o$ + ")"
    end if
    dep_make_func_declaration$ = o$
end function

sub dep_add_dependency(given$)
    'Does the dependency itself exist?
    if _fileexists(given$) then
        path$ = given$
    elseif _fileexists(given$ + ".a") then
        path$ = given$ + ".a"
    elseif _fileexists(given$ + ".o") then
        path$ = given$ + ".o"
    else
        fatalerror "Cannot locate dependency " + given$
    end if

    if dep_last_file = ubound(dep_files) then
        new_size = ubound(dep_files) * 2
        redim _preserve dep_files(new_size) as string
    end if
    dep_last_file = dep_last_file + 1
    dep_files(dep_last_file) = path$
    
    'Is there an accompanying declaration file?
    if _fileexists(given$ + ".bh") then
        add_input_file given$ + ".bh", TRUE
    end if
end sub

