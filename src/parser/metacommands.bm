'Copyright 2020 Luke Ceddia
'SPDX-License-Identifier: Apache-2.0
'metacommands.bm - Process $metacommands in parser

'Expects: META_LIST
'Results: TOK_NEWLINE
sub ps_meta_list
    ps_consume META_LIST
    category$ = "SYMTAB"
    if tok_token = TOK_METAPARAM then
        category$ = _trim$(ucase$(tok_content$))
        ps_consume TOK_METAPARAM
    end if
    select case left$(category$, 1)
    case "S" 'SYMTAB
        symtab_dump
    case "F" 'FUNCTIONS
        type_dump_functions
    case "P" 'PROGRAM
        ast_dump_pretty AST_ENTRYPOINT, 0
        dump_subprocedures
    case "C" 'CONSTANTS
        ast_dump_constants
    case else
        ps_error "$LIST [SFPC]"
    end select
end sub

'Expects: META_DEBUG
'Results: TOK_NEWLINE
sub ps_meta_debug
    ps_consume META_DEBUG
    action$ = "ON"
    if tok_token = TOK_METAPARAM then
        action$ = _trim$(ucase$(tok_content$))
        ps_consume TOK_METAPARAM
    end if
    select case action$
    case "ON"
        options.debug = TRUE
    case "OFF"
        options.debug = FALSE
    case else
        ps_error "$DEBUG [ON|OFF]"
    end select
end sub

'Expects: META_INCLUDE
'Results: TOK_NEWLINE
sub ps_meta_include
    $if DEBUG_PARSE_TRACE then
    debuginfo "Start $include"
    $end if
    if input_files(input_files_last).handle = 0 then
        'No file is open, we must be in interactive mode or similar
        ps_error "Cannot include files in this mode"
    end if
    ps_consume META_INCLUDE
    if tok_token <> TOK_METAPARAM then ps_error "Filename required"
    filename$ = _trim$(tok_content$)
    tok_advance 'Consume file name
    if left$(filename$, 1) <> "'" or right$(filename$, 1) <> "'" then
        ps_error "Filename must be surrounded by single quotes"
    end if
    filename$ = mid$(filename$, 2, len(filename$) - 2)
    input_files_last = input_files_last + 1
    if ubound(input_files) < input_files_last then
        redim _preserve input_files(input_files_last) as input_file_t
    end if
    input_files(input_files_last).handle = freefile
    input_files(input_files_last).filename = filename$
    'A relative path is relative to the location of the including file
    filename$ = locate_path$(filename$, input_files(input_files_last - 1).dirname)
    input_files(input_files_last).dirname = dirname$(filename$)
    open_file filename$, input_files(input_files_last).handle, FALSE
    $if DEBUG_PARSE_TRACE then
    debuginfo "Completed $include"
    $end if
end sub

'Expects: META_OPTION
'Results: TOK_NEWLINE
sub ps_meta_option
    $if DEBUG_PARSE_TRACE then
    debuginfo "Start $option"
    $end if
    ps_consume META_OPTION
    if tok_token <> TOK_METAPARAM then ps_error "Expected list of options"
    redim options(0) as string
    split ucase$(tok_content$), ",", options()
    for i = 0 to ubound(options)
        plus = TRUE
        if left$(options(i), 1) = "+" then
            plus = TRUE
            options(i) = mid$(options(i), 2)
        elseif left$(options(i), 1) = "-" then
            plus = FALSE
            options(i) = mid$(options(i), 2)
        end if
        select case _trim$(options(i))
        case "_EXPLICIT", "EXPLICIT"
            ps_allow_implicit_vars = not plus
        case "_EXPLICITARRAY"
            'Arrays are never allowed to be implicit so this is always in effect.
            'Ignore silently for compatibility.
        case "OVERFLOW"
            imm_allow_overflow = plus
        case else
            ps_error "Unknown option " + options(i)
        end select
    next i
    tok_advance
    $if DEBUG_PARSE_TRACE then
    debuginfo "Completed $option"
    $end if
end sub

'Expects: unknown metacommand
'Results: TOK_NEWLINE
sub ps_meta_unknown
    $if DEBUG_PARSE_TRACE then
    debuginfo "Metacommand " + tok_content$ + " is unknown"
    $end if
    while tok_token <> TOK_NEWLINE
        tok_advance
    wend
end sub
