'Copyright Luke Ceddia
'SPDX-License-Identifier: Apache-2.0
'const.bm - Parse rules for CONST

'Expects: TOK_CONST
'Results: token after rvalue
function ps_const
    $if DEBUG_PARSE_TRACE then
    debuginfo "Start const"
    $end if
    ps_consume TOK_CONST
    'We use a block so we can deal with multiple consts
    root = ast_add_node(AST_BLOCK)

    do
        if tok_token <> TOK_UNKNOWN then ps_error "CONST already defined"
        const_name$ = tok_content$
        tok_advance
        sigil = ps_opt_sigil
        var = ps_new_var_pp(const_name$, sigil, TRUE, FALSE)
        lval = ast_add_node(AST_VAR)
        lval->ref = var
        var->vflags = var->vflags or SYM_VARIABLE_CONST 'Mark constant
        assignment = ast_add_node(AST_ASSIGN)
        root->attach(assignment)
        assignment->attach(lval)
        ps_consume TOK_EQUALS

        expr = ps_expr
        if sigil = 0 then
            var->type = type_of_expr(expr)
            ast_attach assignment, expr
        elseif type_can_cast(type_of_expr(expr), sigil) then
            cast = ast_add_node(AST_CAST)
            cast->ref = sigil
            cast->attach(expr)
            assignment->attach(cast)
        else
            ps_error "Type mismatch"
        end if
    loop while ps_consumed(TOK_COMMA) 

    ps_const = root
    $if DEBUG_PARSE_TRACE then
    debuginfo "Completed const"
    $end if
end function
