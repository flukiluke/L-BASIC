'Copyright 2020 Luke Ceddia
'SPDX-License-Identifier: Apache-2.0
'maths.bm - Executors for maths operations

case TOK_ABS
    imm_eval ast_get_child(node, 1), v1
    result.n = abs(v1.n)

case TOK_ATN
    imm_eval ast_get_child(node, 1), v1
    result.n = atn(v1.n)

case TOK_BACKSLASH
    imm_eval ast_get_child(node, 1), v1
    imm_eval ast_get_child(node, 2), v2
    result.n = v1.n \ v2.n

case TOK_COS
    imm_eval ast_get_child(node, 1), v1
    result.n = cos(v1.n)

case TOK_DASH
    imm_eval ast_get_child(node, 1), v1
    imm_eval ast_get_child(node, 2), v2
    result.n = v1.n - v2.n

case TOK_EXP
    imm_eval ast_get_child(node, 1), v1
    result.n = exp(v1.n)

case TOK__PI
    v1.n = 1
    c1 = ast_get_child(node, 1)
    if not ast_is_none(c1) then imm_eval c1, v1
    result.n = _pi(v1.n)

case TOK_LOG
    imm_eval ast_get_child(node, 1), v1
    result.n = log(v1.n)

case TOK_MOD
    imm_eval ast_get_child(node, 1), v1
    imm_eval ast_get_child(node, 2), v2
    result.n = v1.n mod v2.n

case TOK_POWER
    imm_eval ast_get_child(node, 1), v1
    imm_eval ast_get_child(node, 2), v2
    result.n = v1.n ^ v2.n

case TOK_NEGATIVE
    imm_eval ast_get_child(node, 1), v1
    result.n = -v1.n

case TOK_PLUS
    imm_eval ast_get_child(node, 1), v1
    imm_eval ast_get_child(node, 2), v2
    if type_of_call(node) = TYPE_STRING then result.s = v1.s + v2.s else result.n = v1.n + v2.n

case TOK_SIN
    imm_eval ast_get_child(node, 1), v1
    result.n = sin(v1.n)

case TOK_SGN
    imm_eval ast_get_child(node, 1), v1
    result.n = sgn(v1.n)

case TOK_SQR
    imm_eval ast_get_child(node, 1), v1
    result.n = sqr(v1.n)

case TOK_SLASH
    imm_eval ast_get_child(node, 1), v1
    imm_eval ast_get_child(node, 2), v2
    result.n = v1.n / v2.n

case TOK_STAR
    imm_eval ast_get_child(node, 1), v1
    imm_eval ast_get_child(node, 2), v2
    result.n = v1.n * v2.n

case TOK_TAN
    imm_eval ast_get_child(node, 1), v1
    result.n = tan(v1.n)
