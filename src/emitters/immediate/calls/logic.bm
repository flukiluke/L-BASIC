'Copyright Luke Ceddia
'SPDX-License-Identifier: Apache-2.0
'logic.bm - Executors for logic operations

case TOK_AND
    imm_eval ast_get_child(node, 1), v1
    imm_eval ast_get_child(node, 2), v2
    result.n = v1.n and v2.n

case TOK_CMP_GT
    imm_eval ast_get_child(node, 1), v1
    imm_eval ast_get_child(node, 2), v2
    result.n = v1.n > v2.n

case TOK_CMP_GTEQ
    imm_eval ast_get_child(node, 1), v1
    imm_eval ast_get_child(node, 2), v2
    result.n = v1.n >= v2.n

case TOK_CMP_LT
    imm_eval ast_get_child(node, 1), v1
    imm_eval ast_get_child(node, 2), v2
    result.n = v1.n < v2.n

case TOK_CMP_LTEQ
    imm_eval ast_get_child(node, 1), v1
    imm_eval ast_get_child(node, 2), v2
    result.n = v1.n <= v2.n

case TOK_CMP_NEQ
    imm_eval ast_get_child(node, 1), v1
    imm_eval ast_get_child(node, 2), v2
    if type_of_expr(ast_get_child(node, 1)) = TYPE_STRING then result.n = v1.s <> v2.s else result.n = v1.n <> v2.n

case TOK_EQUALS
    imm_eval ast_get_child(node, 1), v1
    imm_eval ast_get_child(node, 2), v2
    if type_of_expr(ast_get_child(node, 1)) = TYPE_STRING then result.n = v1.s = v2.s else result.n = v1.n = v2.n

case TOK_EQV
    imm_eval ast_get_child(node, 1), v1
    imm_eval ast_get_child(node, 2), v2
    result.n = v1.n eqv v2.n

case TOK_IMP
    imm_eval ast_get_child(node, 1), v1
    imm_eval ast_get_child(node, 2), v2
    result.n = v1.n imp v2.n

case TOK_NOT
    imm_eval ast_get_child(node, 1), v1
    result.n = not v1.n

case TOK_OR
    imm_eval ast_get_child(node, 1), v1
    imm_eval ast_get_child(node, 2), v2
    result.n = v1.n or v2.n

case TOK_XOR
    imm_eval ast_get_child(node, 1), v1
    imm_eval ast_get_child(node, 2), v2
    result.n = v1.n xor v2.n
