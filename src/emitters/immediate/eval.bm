'Copyright 2020 Luke Ceddia
'SPDX-License-Identifier: Apache-2.0
'eval.bm - Top level executor function

sub imm_eval(node, result as imm_value_t)
    select case ast_nodes(node).typ
    case AST_ASSIGN
        imm_do_assign node
    case AST_IF
        imm_do_conditional node
    case AST_WHILE
        imm_do_do_pre node
    case AST_DO_PRE
        imm_do_do_pre node
    case AST_DO_POST
        imm_do_do_post node
    case AST_FOR
        imm_do_for node
    case AST_SELECT
        imm_do_select node
    case AST_SELECT_VALUE
        result = imm_select_value
    case AST_CALL, AST_SELECT_IS
        imm_do_call node, result
    case AST_CONSTANT
        if type_of_constant(node) = TYPE_STRING then
            result.s = ast_constants(ast_nodes(node).ref)
        else
            result.n = val(ast_constants(ast_nodes(node).ref))
        end if
    case AST_BLOCK
        imm_do_block node, result
    case AST_VAR, AST_UDT_ACCESS, AST_ARRAY_ACCESS
        addr = imm_get_addr(node)
        'Take address for a full UDT or array
        if symtab(type_of_lvalue(node)).v2 then
            result.n = addr
        else
            imm_get_at_addr addr, result
        end if
    case AST_ARRAY_CREATE
        imm_do_array_resize node, FALSE
    case AST_ARRAY_RESIZE
        imm_do_array_resize node, TRUE
    case AST_ARRAY_DELETE
        imm_do_array_delete node
    case AST_ARRAY_ESTABLISH
        imm_do_array_establish node
    case AST_CAST
        imm_do_cast node, result
    case AST_GOTO
        imm_do_goto node
    case AST_EXIT
        imm_exit_node = ast_nodes(node).ref
    case AST_SET_RETURN
        dim temp as imm_value_t
        imm_eval ast_get_child(node, 1), temp
        imm_set_at_addr imm_stack_last, temp
    end select
end sub

sub imm_do_cast(node, result as imm_value_t)
    imm_eval ast_get_child(node, 1), result
    imm_enforce_type result, ast_nodes(node).ref
end sub

sub imm_enforce_type(result as imm_value_t, typ)
    select case typ
    case TYPE_INTEGER
        result.n = cint(result.n)
    case TYPE_LONG
        result.n = clng(result.n)
    case TYPE_INTEGER64
        result.n = _round(result.n)
        if result.n < -2147483648 or result.n > 2147483647 then error 6
    case TYPE_SINGLE
        result.n = csng(result.n)
    case TYPE_DOUBLE
        result.n = cdbl(result.n)
    case TYPE_QUAD, TYPE_STRING
        'Nothing to do here
    end select
end sub
