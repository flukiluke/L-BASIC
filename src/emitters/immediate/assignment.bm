'Copyright 2020 Luke Ceddia
'SPDX-License-Identifier: Apache-2.0
'assignment.bm - Executor for variable assignment

sub imm_do_assign(node)
    dim rvalue as imm_value_t
    lvalue = ast_get_child(node, 1)
    imm_eval ast_get_child(node, 2), rvalue
    dest_addr = imm_get_addr(lvalue)  
    typ = type_of_lvalue(lvalue)
    if symtab(typ).v2 = SYM_TYPE_UDT then
        src_addr = rvalue.n
        for i = 1 to type_fixed_size(typ)
            'TODO: Deep copy
            dim temp as imm_value_t
            imm_get_at_addr src_addr, temp
            imm_set_at_addr dest_addr, temp
            src_addr = imm_add_offset(src_addr, 1)
            dest_addr = imm_add_offset(dest_addr, 1)
        next i
    elseif symtab(typ).v2 = SYM_TYPE_ARRAY then
        src_addr = rvalue.n
        'Don't try and copy an array onto itself
        if dest_addr = src_addr then exit sub
        src_data_addr = imm_get_at_addr_n(src_addr)
        if src_data_addr = 0 then
            imm_error "Cannot assign uninitialised array"
        end if
        src_dims = imm_get_at_addr_n(imm_add_offset(src_addr, 1))
        if dest_addr = 0 then
            'need to initialise dest array
            dest_addr = imm_heap_alloc(2 + src_dims * 2)
            imm_set_at_addr_n imm_get_addr_loc(lvalue), dest_addr
            imm_set_at_addr_n dest_addr, 0 'No data block yet
            imm_set_at_addr_n imm_add_offset(dest_addr, 1), src_dims
            dest_dims = src_dims
        else
            dest_dims = imm_get_at_addr_n(imm_add_offset(dest_addr, 1))
            if src_dims <> dest_dims then
                imm_error "Array dimensions do not match"
            end if
        end if
        'Copy data block, freeing old one if needed
        dest_data_addr = imm_get_at_addr_n(dest_addr)
        if dest_data_addr then imm_heap_free dest_data_addr
        dest_data_addr = imm_heap_copy_alloc(src_data_addr)
        imm_set_at_addr_n dest_addr, dest_data_addr
        'Also copy upper and lower bound information 
        for i = 2 to src_dims * 2 + 1
            imm_set_at_addr_n imm_add_offset(dest_addr, i), imm_get_at_addr_n(imm_add_offset(src_addr, i))
        next i
    else
        imm_set_at_addr dest_addr, rvalue
    end if
end sub
